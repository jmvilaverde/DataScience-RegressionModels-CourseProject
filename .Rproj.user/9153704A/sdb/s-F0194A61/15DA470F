{
    "contents" : "data(mtcars)\n\nnames(mtcars)\nstr(mtcars)\n\n#try to find first correlations\npairs(mtcars, panel=panel.smooth, main=\"mtcars data\")\n\n\nsummary(lm(am ~ ., data = mtcars))\nfit <- lm(am ~ ., data = mtcars)\nplot(predict(fit), resid(fit))\ndfbetas(fit)\nanova(fit) #anova reveals variance relation between values\n\nsummary(lm(mpg ~ am*. -1, data = mtcars))\nfit2 <- lm(mpg ~ am*., data = mtcars)\nplot(predict(fit2), resid(fit2))\nanova(fit2) #anova reveals variance relation between values\n\n#Relevant columns: mpg, am\n#[, 9]         am\t Transmission (0 = automatic, 1 = manual)\n\n#Try to identify necessary fields\n#Adding 1 value\ncomparative <- function(model, exception){\n        \n        print(coef(model))\n        for (i in 2:11){\n                relevants <- c()\n                if (!(colnames(mtcars)[i] %in% exception)){\n                        print(\"----------------------------------------------------------------------------------\")\n                        print(colnames(mtcars)[i])\n                        model.test <- with(mtcars, lm(mpg ~ am + mtcars[,i]))\n                        print(coef(model.test))\n                        print(anova(model, model.test))\n                        if (anova(model, model.test)[2,6]< 0.05) {\n                                print (paste(colnames(mtcars)[i], \" is relevant\"))\n                                relevans <- rbind(relevants, colnames(mtcars)[i])\n                                \n                        }\n                        else\n                                print (paste(colnames(mtcars)[i], \" is NOT relevant\"))\n                }\n                \n        }\n        print(relevants)\n}\n\nmodel <- with(mtcars, lm(mpg ~ am))\ncomparative(model, c(\"am\"))\n\nanova(model, model.Disp)[2,6]\nanova(model, model.Cyl)\nanova(model, model.Hp)\nanova(model, model.Drat) #Pr(>F) 0.0107 *\nanova(model, model.Weight)\nanova(model, model.Qsec)\nanova(model, model.Gear) #Not interesting P > 0.9651\n\n\n\nplot(mtcars$am, mtcars$mpg, pch=19)\nlines(mtcars$am,model$fitted, col=\"black\", lwd=3) \n\n\nmodelAutomatic <- with(mtcars, lm(mpg[mtcars$am ==0] ~ am[mtcars$am ==0]))\nmodelManual <- with(mtcars, lm(mpg[mtcars$am ==1] ~ am[mtcars$am ==1]))\n\nplot(mtcars$am, mtcars$mpg, pch=19)\npoints(mtcars$am, mtcars$mpg, pch=19, col=((mtcars$am==0)*1+1))\nlines(mtcars$am[mtcars$am ==0],modelAutomatic$fitted, col=\"black\", lwd=3) \nlines(mtcars$am[mtcars$am ==1],modelManual$fitted, col=\"red\", lwd=3)\n\npairs(mtcars)\n\n\n\nautomatic <- mtcars[mtcars$am==0,]\nautomatic.Model <- lm(mpg ~ cyl, data = automatic)\nsummary(automatic.Model)\nplot(automatic.Model)\n\nmanual <- mtcars[mtcars$am==1,]\nmanual.Model <- lm(mpg ~ cyl, data = manual)\nsummary(manual.Model)\n\nmean(automatic$mpg)\nsummary(automatic$cyl)\nstr(automatic$cyl)\n\nmean(manual$mpg)\nsummary(automatic$cyl)",
    "created" : 1434648599948.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1276500699",
    "id" : "15DA470F",
    "lastKnownWriteTime" : 1434724084,
    "path" : "D:/Privado/repos/7.RegressionModels/CourseProject/CourseProject.R",
    "project_path" : "CourseProject.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}